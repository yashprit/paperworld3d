<?xml version="1.0" encoding="UTF-8"?>
<project name="paperworld3d" default="build-server" basedir="."
    xmlns:ivy="antlib:org.apache.ivy.ant">

    <description>
      PaperWorld3D build and deployment.
    </description>
     <!-- set global properties for this build -->
     <property name="app.name" value="${ant.project.name}"/>
     <property environment="env"/>
	 
     <property name="paperworld.src.dir" location="src/core"/>
	 
     <property name="build.dir" location="bin"/>
	 
	 
     <property name="red5.dir" location="C:/Users/Trevor/workspace/red5_server"/>
     
     <property name="dist.dir" location="${red5.dir}/webapps/${app.name}"/>
     <!-- property name="red5.app.dir" location="${red5.dir}/webapps/${app.name}"/ -->
     <property name="ivy.lib.dir" value="${build.dir}/lib"/>
     <property name="ivy.version" value="ivy-2.0.0-beta1" />
	 
	 <property name="jedai.dir" value="D:/projects/jedai"/>
	 
	 <taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpath="buildlib/xmltask-v1.15.1.jar"/>

     <path id="classpath">
       <pathelement location="${red5.dir}/red5.jar"/>
       <pathelement location="lib/jedai.jar"/>
	   <!-- pathelement location="${dist.dir}/WEB-INF/lib/jedai.jar"/ -->
     </path>

     <target name="init">
       <!-- Create the time stamp -->
       <tstamp/>
       <!-- Create the build directory structure used by compile -->
       <mkdir dir="${build.dir}"/>
	   <mkdir dir="${dist.dir}/WEB-INF/lib"/>
     </target>
	 
	 <target name="compile" depends="init">
		 <antcall target="build-paperworld"/>
	 </target>
	 
	 <target name="build-jedai">
		 <ant dir="${jedai.dir}/server/jedai/WEB-INF"/>
	 </target>

     <target name="build-paperworld" description="compile the source " >
		 
	   <delete dir="${build.dir}/core"/>
       <!-- Compile the java code from ${src.dir} into ${build.dir} -->
       <mkdir dir="${build.dir}/core"/>
	   
       <javac srcdir="${paperworld.src.dir}" destdir="${build.dir}/core" classpathref="classpath"/>
	   
       <!-- copy the logback.xml file here because I want it in our jar -->
       <copy todir="${build.dir}/core">
         <fileset dir="config">
          <include name="logback.xml"/>
         </fileset>
       </copy>
	   
	   <jar jarfile="lib/${app.name}.jar"
           basedir="${build.dir}/core"/>

     </target>
	
     <target name="dist" description="generate the distribution" >
 
       <!-- Copy over all the Jar files we need -->
       <copy todir="dist/WEB-INF/lib" overwrite="true">
         <fileset dir="lib">
           <include name="**/*.jar"/>
         </fileset>
		 <!-- fileset dir="${jedai.dir}/server/jedai/WEB-INF/lib">
			 <include name="jedai.jar"/>
		 </fileset-->
       </copy>
       <!-- Copy everything in the config directory to the top level dir -->
       <copy todir="dist/WEB-INF" overwrite="true">
         <fileset dir="config">
          <include name="**/*"/>
         </fileset>
        </copy>
        <!-- Copy over Meta Data to one level up from WEB-INF directory" -->
        <!--copy todir="${dist.dir}">
         <fileset dir=".">
           <include name="streams/*"/>
         </fileset>
        </copy>
        <copy todir="${dist.dir}">
         <fileset dir=".">
           <include name="metadata/*"/>
         </fileset>
        </copy-->
        
        <!-- Now copy it from the local WEB-INF to the distribution/deployment directory -->
		
		<copy todir="${dist.dir}/WEB-INF" overwrite="true">
			<fileset dir="dist/WEB-INF">
				<include name="**/*"/>
			</fileset>
		</copy>
     </target>

     <target name="build-server" depends="compile, dist"
       description="insert this app into the RED5_HOME service">
       <!--mkdir dir="${red5.app.dir}"/>
       <copy todir="${red5.app.dir}">
         <fileset dir="${dist.dir}">
          <include name="**/*"/>
         </fileset>
        </copy-->
     </target>

     <target name="clean"
           description="clean up" >
       <!-- Delete the ${build.dir} and ${dist.dir} directory trees -->
       <delete dir="${build.dir}"/>
       <delete dir="${dist.dir}"/>
       <delete dir="${red5.dir}/webapps/${app.name}"/>
     </target>
</project>
