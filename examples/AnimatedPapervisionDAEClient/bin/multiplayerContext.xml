<?xml version="1.0" encoding="utf-8"?>
<objects>

	<object id="local.avatar" class="com.paperworld.multiplayer.objects.Avatar" singleton="false" scope="prototype" lazy-init="true">
		<property name="client">
			<object class="com.paperworld.multiplayer.objects.Client" >
				<property name="syncObject">
					<object class="com.paperworld.multiplayer.objects.SynchronisableObject">
						<property name="object">
						<object class="org.papervision3d.objects.primitives.Plane">
							<constructor-arg>
								<object class="org.papervision3d.materials.WireframeMaterial">
									<constructor-arg value="0xff0000" />
									<property name="doubleSided" value="true"/>
								</object>
							</constructor-arg>
							<constructor-arg value="100" />	
							<constructor-arg value="100" />
						</object>
						</property>
					</object>
				</property>
			</object>
		</property>
		<property name="proxy"><ref>sync.proxy</ref></property>		
	</object>
	
	<object id="remote.avatar" class="com.paperworld.multiplayer.objects.RemoteAvatar" singleton="false" scope="prototype" lazy-init="true">
		<property name="client">
			<object class="com.paperworld.multiplayer.objects.Client" >
				<property name="syncObject">
					<object class="com.paperworld.multiplayer.objects.SynchronisableObject">
						<property name="object">
							<object class="org.papervision3d.objects.primitives.Plane">
								<constructor-arg>
									<object class="org.papervision3d.materials.WireframeMaterial">
										<constructor-arg value="0x00ff00" />
										<property name="doubleSided" value="true"/>
									</object>
								</constructor-arg>
								<constructor-arg value="100" />	
								<constructor-arg value="100" />
							</object>
						</property>
					</object>
				</property>
			</object>
		</property>
		<property name="proxy"><ref>sync.proxy</ref></property>		
	</object>
	
	<object id="local.sync.object" class="com.paperworld.multiplayer.objects.SynchronisableObject" singleton="false" scope="prototype" lazy-init="true">
		<property name="object"><ref>local.display.object</ref></property>
	</object>
	
	<object id="local.display.object" class="org.papervision3d.objects.primitives.Plane" singleton="false" scope="prototype" lazy-init="true">
		<constructor-arg><ref>local.material</ref></constructor-arg>
		<constructor-arg value="100" />	
		<constructor-arg value="100" />
	</object>
	
	<object id="local.material" class="org.papervision3d.materials.WireframeMaterial" singleton="false" scope="prototype" lazy-init="true">
		<constructor-arg value="0xff0000" />
		<property name="doubleSided" value="true"/>
	</object>
	
	<!-- <object id="remote.avatar" class="com.paperworld.multiplayer.objects.RemoteAvatar" singleton="false" scope="prototype" lazy-init="true">
		<property name="client"><ref>sync.client</ref></property>
		<property name="proxy"><ref>sync.proxy</ref></property>
		<property name="syncObject">
			<object class="com.paperworld.multiplayer.objects.SynchronisableObject"/>
		</property>
	</object> -->
	
	<object id="remote.sync.object" class="com.paperworld.multiplayer.objects.SynchronisableObject" singleton="false" scope="prototype" lazy-init="true">
		<property name="object"><ref>remote.display.object</ref></property>
	</object>
	
	<object id="remote.display.object" class="org.papervision3d.objects.primitives.Plane" singleton="false" scope="prototype" lazy-init="true">
		<constructor-arg><ref>remote.material</ref></constructor-arg>
		<constructor-arg value="100" />	
		<constructor-arg value="100" />
	</object>
	
	<object id="remote.material" class="org.papervision3d.materials.WireframeMaterial" singleton="false" scope="prototype" lazy-init="true">
		<constructor-arg value="0x00ff00" />
		<property name="doubleSided" value="true"/>
	</object>
	
	<object id="sync.client" class="com.paperworld.multiplayer.objects.Client" singleton="false" scope="prototype" lazy-init="true" />
	
	<object id="sync.proxy" class="com.paperworld.multiplayer.objects.Proxy" singleton="false" scope="prototype" lazy-init="true" />
	
</objects>